Simple Reliable Protocol

***********
Description
***********

This project implements a subset of the TCP/IP that handles parallel connections (threading), data corruption, packet loss among others.
Please download the code and follow the instructions below to run. 
To ensure the project is behaving appropriately, send over files (Moby Dick or the Constitution both of which can be found in the repository) from one machine and make sure all the other machines receive them.
Files as long as (or longer than) Moby Dick (~1.2MB) require a longer WAITTIME in app_stress_client.c.
For Moby Dick, I was able to send all the data by calling sleep(WAITTIME * 5).


********************
BUILDING AND RUNNING
********************

This project has been tested with up to 4 different machines running simultaneously.

Use make to compile.
To run the application:
1, start the overlay processes:
	At each node, goto overlay directory: run ./overlay&
	The overlay processes on 4 nodes should be started within 1 min.
	wait until you see: waiting connection from network layer on all the nodes.
2. start the network processes:
	At each node, goto network directory: run ./network&
	wait until you see: waiting for connection from SRT process on all the nodes.
3. start the transport processes and run the application:
	AT one node, goto server dicrectory: run ./app_simple_app or ./app_stress_app
	At another node, goto client directory: run ./app_simple_app or ./app_stress_app

To stop the program:
use kill -s 2 processID to kill the network processes and overlay processes

If the port numbers used by the program are used already, the program exits.
